// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:@Ds20022013.@localhost:3306/db_ecommerce"
}

enum Gender {
  male
  female
}

enum Role {
  admin
  user
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password Int
  first_name String
  last_name String
  gender Gender
  role Role
  bank_account Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  products Product[]
  transactions Transaction[]
  carts Cart[]

}

model Product {
  id Int @id @default(autoincrement())
  userId Int
  product_name String
  product_img String
  price Decimal
  category_name String
  user User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product_categories Product_Category[]
  stocks Stock[]
  transaction_Details Transaction_Detail[]
  carts Cart[]
}

model Product_Category {
  categoryId Int @id @default(autoincrement())
  productId Int
  product Product @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Stock {
  productId Int @id @default(autoincrement())
  qty Int
  product Product @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Transaction {
  id Int @id @default(autoincrement())
  userId Int
  no_invoice Int
  order_date DateTime @default(now())
  total_payment Int
  user User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_Details Transaction_Detail[]
}

model Transaction_Detail {
  transaction_detail_id Int @id @default(autoincrement())
  productId Int
  transactionId Int
  price Decimal
  qty Decimal
  product Product @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Cart {
  id Int @id @default(autoincrement())
  userId Int
  productId Int
  user User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product Product @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

